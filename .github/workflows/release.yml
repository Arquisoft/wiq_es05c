name: Deploy on release

on:
  release:
    types: [published]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: npm --prefix users/authservice ci
    - run: npm --prefix users/userservice ci
    - run: npm --prefix gatewayservice ci
    - run: npm --prefix questionservice ci
    - run: npm --prefix historyservice ci
    - run: npm --prefix roomservice ci
    - run: npm --prefix webapp ci
    - run: npm --prefix users/authservice test -- --coverage
    - run: npm --prefix users/userservice test -- --coverage
    - run: npm --prefix gatewayservice test -- --coverage
    - run: npm --prefix questionservice test -- --coverage
    - run: npm --prefix historyservice test -- --coverage
    - run: npm --prefix roomservice test -- --coverage
    - run: npm --prefix webapp test -- --coverage
    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  docker-push-roomservice:
    name: Push room service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05c/roomservice
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: roomservice
        buildargs: REACT_APP_API_URI
      env:  # Esta l√≠nea estaba mal indentada
        REACT_APP_API_URI: http://${{ secrets.DEPLOY_HOST }}:3000
  
  e2e-tests:
    if: github.ref == 'refs/heads/e2e'
    needs: [unit-tests]
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 21
    - run: npm --prefix users/authservice install
    - run: npm --prefix users/userservice install
    - run: npm --prefix gatewayservice install
    - run: npm --prefix historyservice install
    - run: npm --prefix questionservice install
    - run: npm --prefix roomservice install
    - run: npm --prefix webapp install
    - run: npm --prefix webapp run build

    - name: List files in current directory
      run: ls -la

    - name: Change to repository root
      run: cd $GITHUB_WORKSPACE

    - name: List files in repository root
      run: ls -la

    - run: xvfb-run --auto-servernum npm --prefix webapp run test:e2e
    env :
      CI : ""

  docker-push-webapp:
    name: Push webapp Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      env:
        REACT_APP_API_URI: http://${{ secrets.DEPLOY_HOST }}:8000
        REACT_APP_SOCKET_URI: http://${{ secrets.DEPLOY_HOST }}:8005
      with:
          name: arquisoft/wiq_es05c/webapp
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: webapp
          buildargs: REACT_APP_API_URI,REACT_APP_SOCKET_URI

  docker-push-questionservice:
            name: Push question service Docker Image to GitHub Packages
            runs-on: ubuntu-latest
            permissions:
              contents: read
              packages: write
            needs: [e2e-tests]
            steps:
              - uses: actions/checkout@v4
              - name: Publish to Registry
                uses: elgohr/Publish-Docker-Github-Action@v5
                with:
                  name: arquisoft/wiq_es05c/questionservice
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
                  registry: ghcr.io
                  workdir: questionservice

  docker-push-historyservice:
            name: Push question service Docker Image to GitHub Packages
            runs-on: ubuntu-latest
            permissions:
              contents: read
              packages: write
            needs: [e2e-tests]
            steps:
              - uses: actions/checkout@v4
              - name: Publish to Registry
                uses: elgohr/Publish-Docker-Github-Action@v5
                with:
                  name: arquisoft/wiq_es05c/historyservice
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
                  registry: ghcr.io
                  workdir: historyservice

  docker-push-authservice:
    name: Push auth service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
          name: arquisoft/wiq_es05c/authservice
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: users/authservice

  docker-push-userservice:
    name: Push user service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05c/userservice
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: users/userservice

  docker-push-gatewayservice:
    name: Push gateway service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05c/gatewayservice
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: gatewayservice
  deploy:
    name: Deploy over SSH
    runs-on: ubuntu-latest

    needs: [docker-push-userservice,docker-push-authservice,docker-push-questionservice,docker-push-historyservice,docker-push-gatewayservice,docker-push-webapp,docker-push-roomservice]

    steps:
    - name: Deploy over SSH
      uses: fifsky/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        user: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        command: |
          wget https://raw.githubusercontent.com/arquisoft/wiq_es05c/master/docker-compose.yml -O docker-compose.yml
          wget https://raw.githubusercontent.com/arquisoft/wiq_es05c/master/.env -O .env
          docker compose --profile prod down
          docker compose --profile prod up -d --pull always
