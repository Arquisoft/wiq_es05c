name: Deploy on release

on:
  release:
    types: [published]
  push:
    branches:
      - e2e

jobs:
  e2etests:
    name: Execute E2Etests
    runs-on: ubuntu-latest
    steps:
    - name: Executing E2E tests
      uses: fifsky/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        user: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        command: |
          rm -r ./e2e
          git clone https://github.com/Arquisoft/wiq_es05c.git e2e
          cd e2e
          docker compose --profile prod down
          export GITHUB_ACTIONS=true
          echo "The value of GITHUB ACTIONS is: $GITHUB_ACTIONS"
          npm --prefix users/authservice install
          npm --prefix users/userservice install
          npm --prefix gatewayservice install
          npm --prefix historyservice install
          npm --prefix questionservice install
          npm --prefix roomservice install
          npm --prefix webapp install
          npm --prefix webapp run build   
          docker compose --profile prod up -d --pull always
          sleep 30
          npm --prefix webapp run test:e2e

  
  docker-push-roomservice:
    name: Push room service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2etests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05c/roomservice
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: roomservice
        buildargs: REACT_APP_API_URI
      env:  # Esta l√≠nea estaba mal indentada
        REACT_APP_API_URI: http://${{ secrets.DEPLOY_HOST }}:3000
        
  docker-push-webapp:
    name: Push webapp Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2etests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      env:
        REACT_APP_API_URI: http://${{ secrets.DEPLOY_HOST }}:8000
        REACT_APP_SOCKET_URI: http://${{ secrets.DEPLOY_HOST }}:8005
      with:
          name: arquisoft/wiq_es05c/webapp
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: webapp
          buildargs: REACT_APP_API_URI,REACT_APP_SOCKET_URI

  docker-push-questionservice:
            name: Push question service Docker Image to GitHub Packages
            runs-on: ubuntu-latest
            permissions:
              contents: read
              packages: write
            needs: [e2etests]
            steps:
              - uses: actions/checkout@v4
              - name: Publish to Registry
                uses: elgohr/Publish-Docker-Github-Action@v5
                with:
                  name: arquisoft/wiq_es05c/questionservice
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
                  registry: ghcr.io
                  workdir: questionservice

  docker-push-historyservice:
            name: Push question service Docker Image to GitHub Packages
            runs-on: ubuntu-latest
            permissions:
              contents: read
              packages: write
            needs: [e2etests]
            steps:
              - uses: actions/checkout@v4
              - name: Publish to Registry
                uses: elgohr/Publish-Docker-Github-Action@v5
                with:
                  name: arquisoft/wiq_es05c/historyservice
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
                  registry: ghcr.io
                  workdir: historyservice

  docker-push-authservice:
    name: Push auth service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2etests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
          name: arquisoft/wiq_es05c/authservice
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: users/authservice

  docker-push-userservice:
    name: Push user service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2etests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05c/userservice
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: users/userservice

  docker-push-gatewayservice:
    name: Push gateway service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2etests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05c/gatewayservice
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: gatewayservice
  docker-push-grafana:
    name: Push Grafana Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2etests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05c/grafana
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: grafana
        buildargs: GF_SECURITY_ADMIN_PASSWORD
      env:
        GF_SECURITY_ADMIN_PASSWORD: ${{ secrets.GF_SECURITY_ADMIN_PASSWORD  }}

